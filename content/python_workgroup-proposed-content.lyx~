#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CRMDA Python Workgroup (Fall 2016)
\end_layout

\begin_layout Author
Boryana Koseva
\end_layout

\begin_layout Subsubsection*
Main Text: 
\end_layout

\begin_layout Standard
\begin_inset CommandInset href
LatexCommand href
name "Automate the Boring Stuff with Python by Al Sweigart"
target "https://automatetheboringstuff.com/"

\end_inset


\end_layout

\begin_layout Standard
I will refer to the text as 
\begin_inset Quotes eld
\end_inset

The Boring Stuff
\begin_inset Quotes erd
\end_inset

 from here on
\end_layout

\begin_layout Section*
Week #1 (09/02/2016): Introduction 
\end_layout

\begin_layout Itemize
Downloading and installing Anaconda
\end_layout

\begin_layout Itemize
Starting a Jupyter Notebook
\end_layout

\begin_layout Itemize
Python IDLE and IDEs
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chapter 1: Python Basics"
target "https://automatetheboringstuff.com/chapter1/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Entering expressions into the interactive shell
\end_layout

\begin_layout Itemize
The integer, floating-point, and string data type
\end_layout

\begin_layout Itemize
String concatenation and replication
\end_layout

\begin_layout Itemize
Storing values in variables
\end_layout

\begin_layout Itemize
Assignment statements
\end_layout

\begin_layout Itemize
Variable names
\end_layout

\begin_layout Itemize
Your first program 
\end_layout

\begin_layout Itemize
Comments
\end_layout

\begin_layout Itemize
The print() function
\end_layout

\begin_layout Itemize
The input() function
\end_layout

\begin_layout Itemize
Printing the user's name
\end_layout

\begin_layout Itemize
The len() function
\end_layout

\begin_layout Itemize
The str(), int(), float() functions
\end_layout

\end_deeper
\begin_layout Itemize
Importing Modules and sys.exit()
\end_layout

\begin_deeper
\begin_layout Itemize
Go to
\begin_inset CommandInset href
LatexCommand href
name " Chapter 2"
target "https://automatetheboringstuff.com/chapter2/"

\end_inset

 and use your browser's Find function to search for 'Importing Modules'
\end_layout

\begin_layout Itemize
Note: Don't be confused by the lack of information on the pyperclip module;
 it is discussed later (Week #4)
\end_layout

\end_deeper
\begin_layout Section*
Week #2 (09/09/2016): Flow Control and Functions
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chapter 2: Flow Control"
target "https://automatetheboringstuff.com/chapter2/"

\end_inset

 * Need to provide a Jupyter Notebook with the missing code
\end_layout

\begin_deeper
\begin_layout Itemize
Bolean values
\end_layout

\begin_layout Itemize
Comparison operators
\end_layout

\begin_layout Itemize
Boolean and binary boolean operators
\end_layout

\begin_layout Itemize
The not operator
\end_layout

\begin_layout Itemize
Mixing boolean and comparison operators
\end_layout

\begin_layout Itemize
Conditions
\end_layout

\begin_layout Itemize
Blocks of code
\end_layout

\begin_layout Itemize
Program execusion
\end_layout

\begin_layout Itemize
Flow control statements
\end_layout

\begin_layout Itemize
if, elif, and else statements
\end_layout

\begin_layout Itemize
while Loops
\end_layout

\begin_layout Itemize
break, continue statements
\end_layout

\begin_layout Itemize
for Loops
\end_layout

\begin_layout Itemize
range() function
\end_layout

\begin_deeper
\begin_layout Itemize
starting, stopping, stepping arguments to range()
\end_layout

\end_deeper
\end_deeper
\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chapter 3: Functions"
target "https://automatetheboringstuff.com/chapter3/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
def statements, parameters, return statements, and return values
\end_layout

\begin_layout Itemize
keyword arguments and print()
\end_layout

\begin_layout Itemize
Local vs.
 Global variables
\end_layout

\begin_layout Itemize
the global statement
\end_layout

\end_deeper
\begin_layout Section*
Week #3 (09/16/2016): Lists, Dictionaries, and Data Structures
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chapter 4: Lists"
target "https://automatetheboringstuff.com/chapter4/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The list data type
\end_layout

\begin_layout Itemize
Getting individual values in a list with indeces
\end_layout

\begin_layout Itemize
Negative indeces
\end_layout

\begin_layout Itemize
Getting sublists with slices
\end_layout

\begin_layout Itemize
Getting a list's length with len()
\end_layout

\begin_layout Itemize
Changing values in a list with indeces
\end_layout

\begin_layout Itemize
List concatenation and list replication 
\end_layout

\begin_deeper
\begin_layout Itemize
Copying a list with [:]
\end_layout

\end_deeper
\begin_layout Itemize
Removing values from lists with del statements
\end_layout

\begin_layout Itemize
Working with lists
\end_layout

\begin_layout Itemize
Using for loops with lists
\end_layout

\begin_layout Itemize
The in and not in operators
\end_layout

\begin_layout Itemize
The multiple assignment trick
\end_layout

\begin_layout Itemize
Augmented Assignment Operators
\end_layout

\begin_layout Itemize
List Methods: index(), append(), insert(), remove(), and sort()
\end_layout

\begin_layout Itemize
Strings and Tuples: list-like data types
\end_layout

\begin_layout Itemize
Mutable and immutable data types
\end_layout

\begin_layout Itemize
Tuples
\end_layout

\begin_layout Itemize
list() and tuple()
\end_layout

\begin_layout Itemize
References
\end_layout

\begin_layout Itemize
Passing references
\end_layout

\begin_layout Itemize
copy Module: copy() and deepcopy()
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chapter 5: Dictionaries and Structuring Data"
target "https://automatetheboringstuff.com/chapter5/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
The dictionary data type
\end_layout

\begin_layout Itemize
Dictionaries vs.
 Lists
\end_layout

\begin_layout Itemize
Dictionaries methods: keys(), values(), items()
\end_layout

\begin_layout Itemize
Checking whether a key or a value exists in a dictionary
\end_layout

\begin_layout Itemize
get() method
\end_layout

\begin_layout Itemize
setdefault() method
\end_layout

\begin_layout Itemize
Pretty printing with pprint Module
\end_layout

\begin_layout Itemize
Using data structures to model real-world things
\end_layout

\begin_layout Itemize
Nested dictionaries and lists
\end_layout

\end_deeper
\begin_layout Section*
Week #4 (09/23/2016): Manipulating Strings and Regular Expressions
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chpter 6: Manipulating Strings"
target "https://automatetheboringstuff.com/chapter6/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Working with strings
\end_layout

\begin_layout Itemize
String literals
\end_layout

\begin_layout Itemize
Double quotes 
\end_layout

\begin_layout Itemize
Escape characters
\end_layout

\begin_layout Itemize
Raw strings 
\end_layout

\begin_layout Itemize
Multiline strings with triple quotes
\end_layout

\begin_layout Itemize
Multiline comments
\end_layout

\begin_layout Itemize
Indexing and slicing strings
\end_layout

\begin_layout Itemize
The in and not in operators with strings
\end_layout

\begin_layout Itemize
String methods: upper(), lower(), isupper(), islower()
\end_layout

\begin_layout Itemize
isX() string method
\end_layout

\begin_layout Itemize
startswith() and endswith()
\end_layout

\begin_layout Itemize
join() and split()
\end_layout

\begin_layout Itemize
Justifying text with rjust(), ljust(), and center()
\end_layout

\begin_layout Itemize
Removing whitespace with strip(), rstrip(), and lstrip()
\end_layout

\begin_layout Itemize
Copying and pasting strings with the pyperclip method
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chapter 7: Pattern Matching with Regular Expressions"
target "https://automatetheboringstuff.com/chapter7/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Finding patterns of text without RE
\end_layout

\begin_layout Itemize
Finding patterns of text with RE
\end_layout

\begin_layout Itemize
Creating regex objects
\end_layout

\begin_layout Itemize
Matching regex objects
\end_layout

\begin_layout Itemize
Grouping with parentheses 
\end_layout

\begin_layout Itemize
Matching multiple groups with the pipe
\end_layout

\begin_layout Itemize
optional matching with the question mark
\end_layout

\begin_layout Itemize
Matching zero or more with the star
\end_layout

\begin_layout Itemize
Matching one or more with the plus
\end_layout

\begin_layout Itemize
Matching specific repetitions with curly brackets
\end_layout

\begin_layout Itemize
Greedy and nongreedy matching
\end_layout

\begin_layout Itemize
findall()
\end_layout

\begin_layout Itemize
Character classes
\end_layout

\begin_layout Itemize
Making your own character classes
\end_layout

\begin_layout Itemize
The caret and dollar sign characters
\end_layout

\begin_layout Itemize
The wildcard character
\end_layout

\begin_layout Itemize
Matching everything with dot-star
\end_layout

\begin_layout Itemize
Matching newlines with the dot character
\end_layout

\begin_layout Itemize
Case-insensitive matching
\end_layout

\begin_layout Itemize
Substituting strings with the sub() method
\end_layout

\begin_layout Itemize
Managing complex regexes
\end_layout

\begin_layout Itemize
Combining re.IGNORECASE, re.DOTALL, and re.VERBOSE
\end_layout

\end_deeper
\begin_layout Section*
Week #5 (09/30/2016): Input/Output (I/O) Functions
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chapter 8: Reading and Writing Files"
target "https://automatetheboringstuff.com/chapter8/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Reading and writing files 
\end_layout

\begin_layout Itemize
Files and file paths 
\end_layout

\begin_layout Itemize
Backslash on Windows and forward slash on OS X and Linux
\end_layout

\begin_layout Itemize
The current working directory 
\end_layout

\begin_layout Itemize
Absolute vs.
 relative paths 
\end_layout

\begin_layout Itemize
Creating new folders with os.makedirs()
\end_layout

\begin_layout Itemize
The os.path Module
\end_layout

\begin_layout Itemize
Handling absolute and relative paths
\end_layout

\begin_layout Itemize
Finding file sizes and folder contents
\end_layout

\begin_layout Itemize
Checking path validity 
\end_layout

\begin_layout Itemize
The file reading/writing process
\end_layout

\begin_layout Itemize
Opening files with the open() function
\end_layout

\begin_layout Itemize
Reading the contents of files
\end_layout

\begin_layout Itemize
Writing to files
\end_layout

\begin_layout Itemize
Saving variables with the shelve Module
\end_layout

\begin_layout Itemize
Saving variables with the pprint.pformat() function
\end_layout

\end_deeper
\begin_layout Section*
Week #6 (10/07/2016): Running Programs and Debugging
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Appendix B: Running Programs"
target "https://automatetheboringstuff.com/appendixb/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Shebang line
\end_layout

\begin_layout Itemize
Running Python programs on Windows
\end_layout

\begin_layout Itemize
Running Python programs on OS X and Linux
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "The Boring Stuff - Chapter 10: Debugging"
target "https://automatetheboringstuff.com/chapter10/"

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Raising Exceptions
\end_layout

\begin_layout Itemize
Getting the traceback as a string
\end_layout

\begin_layout Itemize
Assertions
\end_layout

\begin_layout Itemize
Example: Using an assertion in a traffic light simulation
\end_layout

\begin_layout Itemize
Disabling assertions
\end_layout

\begin_layout Itemize
Logging
\end_layout

\begin_layout Itemize
Using the logging Module
\end_layout

\begin_layout Itemize
Don't debug with print
\end_layout

\begin_layout Itemize
Logging levels
\end_layout

\begin_layout Itemize
Disabling logging
\end_layout

\begin_layout Itemize
IDLE's debugger
\end_layout

\end_deeper
\begin_layout Standard

\end_layout

\end_body
\end_document
